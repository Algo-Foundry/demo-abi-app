{
    "hints": {
        "update_global(string,uint64)string": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "update_local(string,uint64)string": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "create_nft(string,string,string)uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "transfer_nft()string": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "atomic_check(string,txn,txn,uint64)string": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDgKaW50Y2Jsb2NrIDAgMSAyCmJ5dGVjYmxvY2sgMHgxNTFmN2M3NSAweCAweDQ3NmM2ZjYyNjE2YzQ5NmU3NDY1Njc2NTcyIDB4NDc2YzZmNjI2MTZjNTQ2NTc4NzQgMHg0YzZmNjM2MTZjNDk2ZTc0NjU2NzY1NzIgMHg0YzZmNjM2MTZjNTQ2NTc4NzQKdHhuIE51bUFwcEFyZ3MKaW50Y18wIC8vIDAKPT0KYm56IG1haW5fbDEyCnR4bmEgQXBwbGljYXRpb25BcmdzIDAKcHVzaGJ5dGVzIDB4MWRmNGM5MWEgLy8gInVwZGF0ZV9nbG9iYWwoc3RyaW5nLHVpbnQ2NClzdHJpbmciCj09CmJueiBtYWluX2wxMQp0eG5hIEFwcGxpY2F0aW9uQXJncyAwCnB1c2hieXRlcyAweDBjZjk3YmVhIC8vICJ1cGRhdGVfbG9jYWwoc3RyaW5nLHVpbnQ2NClzdHJpbmciCj09CmJueiBtYWluX2wxMAp0eG5hIEFwcGxpY2F0aW9uQXJncyAwCnB1c2hieXRlcyAweGJkYjYzMzM2IC8vICJjcmVhdGVfbmZ0KHN0cmluZyxzdHJpbmcsc3RyaW5nKXVpbnQ2NCIKPT0KYm56IG1haW5fbDkKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMApwdXNoYnl0ZXMgMHg2Mzk0YjdmNCAvLyAidHJhbnNmZXJfbmZ0KClzdHJpbmciCj09CmJueiBtYWluX2w4CnR4bmEgQXBwbGljYXRpb25BcmdzIDAKcHVzaGJ5dGVzIDB4YWM0YmFmMzggLy8gImF0b21pY19jaGVjayhzdHJpbmcsdHhuLHR4bix1aW50NjQpc3RyaW5nIgo9PQpibnogbWFpbl9sNwplcnIKbWFpbl9sNzoKdHhuIE9uQ29tcGxldGlvbgppbnRjXzAgLy8gTm9PcAo9PQp0eG4gQXBwbGljYXRpb25JRAppbnRjXzAgLy8gMAohPQomJgphc3NlcnQKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQpzdG9yZSAxMQp0eG5hIEFwcGxpY2F0aW9uQXJncyAyCmJ0b2kKc3RvcmUgMTQKdHhuIEdyb3VwSW5kZXgKaW50Y18yIC8vIDIKLQpzdG9yZSAxMgp0eG4gR3JvdXBJbmRleAppbnRjXzEgLy8gMQotCnN0b3JlIDEzCmxvYWQgMTEKbG9hZCAxMgpsb2FkIDEzCmxvYWQgMTQKY2FsbHN1YiBhdG9taWNjaGVja184CnN0b3JlIDE1CmJ5dGVjXzAgLy8gMHgxNTFmN2M3NQpsb2FkIDE1CmNvbmNhdApsb2cKaW50Y18xIC8vIDEKcmV0dXJuCm1haW5fbDg6CnR4biBPbkNvbXBsZXRpb24KaW50Y18wIC8vIE5vT3AKPT0KdHhuIEFwcGxpY2F0aW9uSUQKaW50Y18wIC8vIDAKIT0KJiYKYXNzZXJ0CmNhbGxzdWIgdHJhbnNmZXJuZnRfNwpzdG9yZSAxMApieXRlY18wIC8vIDB4MTUxZjdjNzUKbG9hZCAxMApjb25jYXQKbG9nCmludGNfMSAvLyAxCnJldHVybgptYWluX2w5Ogp0eG4gT25Db21wbGV0aW9uCmludGNfMCAvLyBOb09wCj09CnR4biBBcHBsaWNhdGlvbklECmludGNfMCAvLyAwCiE9CiYmCmFzc2VydAp0eG5hIEFwcGxpY2F0aW9uQXJncyAxCnN0b3JlIDYKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMgpzdG9yZSA3CnR4bmEgQXBwbGljYXRpb25BcmdzIDMKc3RvcmUgOApsb2FkIDYKbG9hZCA3CmxvYWQgOApjYWxsc3ViIGNyZWF0ZW5mdF82CnN0b3JlIDkKYnl0ZWNfMCAvLyAweDE1MWY3Yzc1CmxvYWQgOQppdG9iCmNvbmNhdApsb2cKaW50Y18xIC8vIDEKcmV0dXJuCm1haW5fbDEwOgp0eG4gT25Db21wbGV0aW9uCmludGNfMCAvLyBOb09wCj09CnR4biBBcHBsaWNhdGlvbklECmludGNfMCAvLyAwCiE9CiYmCmFzc2VydAp0eG5hIEFwcGxpY2F0aW9uQXJncyAxCnN0b3JlIDMKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMgpidG9pCnN0b3JlIDQKbG9hZCAzCmxvYWQgNApjYWxsc3ViIHVwZGF0ZWxvY2FsXzUKc3RvcmUgNQpieXRlY18wIC8vIDB4MTUxZjdjNzUKbG9hZCA1CmNvbmNhdApsb2cKaW50Y18xIC8vIDEKcmV0dXJuCm1haW5fbDExOgp0eG4gT25Db21wbGV0aW9uCmludGNfMCAvLyBOb09wCj09CnR4biBBcHBsaWNhdGlvbklECmludGNfMCAvLyAwCiE9CiYmCmFzc2VydAp0eG5hIEFwcGxpY2F0aW9uQXJncyAxCnN0b3JlIDAKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMgpidG9pCnN0b3JlIDEKbG9hZCAwCmxvYWQgMQpjYWxsc3ViIHVwZGF0ZWdsb2JhbF80CnN0b3JlIDIKYnl0ZWNfMCAvLyAweDE1MWY3Yzc1CmxvYWQgMgpjb25jYXQKbG9nCmludGNfMSAvLyAxCnJldHVybgptYWluX2wxMjoKdHhuIE9uQ29tcGxldGlvbgppbnRjXzAgLy8gTm9PcAo9PQpibnogbWFpbl9sMjAKdHhuIE9uQ29tcGxldGlvbgppbnRjXzEgLy8gT3B0SW4KPT0KYm56IG1haW5fbDE5CnR4biBPbkNvbXBsZXRpb24KaW50Y18yIC8vIENsb3NlT3V0Cj09CmJueiBtYWluX2wxOAp0eG4gT25Db21wbGV0aW9uCnB1c2hpbnQgNSAvLyBEZWxldGVBcHBsaWNhdGlvbgo9PQpibnogbWFpbl9sMTcKZXJyCm1haW5fbDE3Ogp0eG4gQXBwbGljYXRpb25JRAppbnRjXzAgLy8gMAohPQphc3NlcnQKY2FsbHN1YiBkZWxldGVfMwppbnRjXzEgLy8gMQpyZXR1cm4KbWFpbl9sMTg6CnR4biBBcHBsaWNhdGlvbklECmludGNfMCAvLyAwCiE9CmFzc2VydApjYWxsc3ViIGNsb3Nlb3V0XzIKaW50Y18xIC8vIDEKcmV0dXJuCm1haW5fbDE5Ogp0eG4gQXBwbGljYXRpb25JRAppbnRjXzAgLy8gMAohPQphc3NlcnQKY2FsbHN1YiBvcHRpbl8xCmludGNfMSAvLyAxCnJldHVybgptYWluX2wyMDoKdHhuIEFwcGxpY2F0aW9uSUQKaW50Y18wIC8vIDAKPT0KYXNzZXJ0CmNhbGxzdWIgY3JlYXRlXzAKaW50Y18xIC8vIDEKcmV0dXJuCgovLyBjcmVhdGUKY3JlYXRlXzA6CnByb3RvIDAgMApieXRlY18yIC8vICJHbG9iYWxJbnRlZ2VyIgppbnRjXzAgLy8gMAphcHBfZ2xvYmFsX3B1dApieXRlY18zIC8vICJHbG9iYWxUZXh0IgpieXRlY18xIC8vICIiCmFwcF9nbG9iYWxfcHV0CnJldHN1YgoKLy8gb3B0X2luCm9wdGluXzE6CnByb3RvIDAgMAp0eG4gU2VuZGVyCmJ5dGVjIDQgLy8gIkxvY2FsSW50ZWdlciIKaW50Y18xIC8vIDEKYXBwX2xvY2FsX3B1dAp0eG4gU2VuZGVyCmJ5dGVjIDUgLy8gIkxvY2FsVGV4dCIKcHVzaGJ5dGVzIDB4NmQ3OTIwNmM2ZjYzNjE2YzIwNzM3NDYxNzQ2NTIxIC8vICJteSBsb2NhbCBzdGF0ZSEiCmFwcF9sb2NhbF9wdXQKcmV0c3ViCgovLyBjbG9zZV9vdXQKY2xvc2VvdXRfMjoKcHJvdG8gMCAwCmludGNfMSAvLyAxCnJldHVybgoKLy8gZGVsZXRlCmRlbGV0ZV8zOgpwcm90byAwIDAKdHhuIFNlbmRlcgpnbG9iYWwgQ3JlYXRvckFkZHJlc3MKPT0KLy8gdW5hdXRob3JpemVkCmFzc2VydAppbnRjXzEgLy8gMQpyZXR1cm4KCi8vIHVwZGF0ZV9nbG9iYWwKdXBkYXRlZ2xvYmFsXzQ6CnByb3RvIDIgMQpieXRlY18xIC8vICIiCmJ5dGVjXzMgLy8gIkdsb2JhbFRleHQiCmZyYW1lX2RpZyAtMgpleHRyYWN0IDIgMAphcHBfZ2xvYmFsX3B1dApieXRlY18yIC8vICJHbG9iYWxJbnRlZ2VyIgpmcmFtZV9kaWcgLTEKYXBwX2dsb2JhbF9wdXQKcHVzaGJ5dGVzIDB4MDAxNTU1NzA2NDYxNzQ2NTY0MjA2NzZjNmY2MjYxNmMyMDczNzQ2MTc0NjUyMSAvLyAweDAwMTU1NTcwNjQ2MTc0NjU2NDIwNjc2YzZmNjI2MTZjMjA3Mzc0NjE3NDY1MjEKZnJhbWVfYnVyeSAwCnJldHN1YgoKLy8gdXBkYXRlX2xvY2FsCnVwZGF0ZWxvY2FsXzU6CnByb3RvIDIgMQpieXRlY18xIC8vICIiCnR4biBTZW5kZXIKYnl0ZWMgNSAvLyAiTG9jYWxUZXh0IgpmcmFtZV9kaWcgLTIKZXh0cmFjdCAyIDAKYXBwX2xvY2FsX3B1dAp0eG4gU2VuZGVyCmJ5dGVjIDQgLy8gIkxvY2FsSW50ZWdlciIKZnJhbWVfZGlnIC0xCmFwcF9sb2NhbF9wdXQKcHVzaGJ5dGVzIDB4MDAxNDU1NzA2NDYxNzQ2NTY0MjA2YzZmNjM2MTZjMjA3Mzc0NjE3NDY1MjEgLy8gMHgwMDE0NTU3MDY0NjE3NDY1NjQyMDZjNmY2MzYxNmMyMDczNzQ2MTc0NjUyMQpmcmFtZV9idXJ5IDAKcmV0c3ViCgovLyBjcmVhdGVfbmZ0CmNyZWF0ZW5mdF82Ogpwcm90byAzIDEKaW50Y18wIC8vIDAKaXR4bl9iZWdpbgpwdXNoaW50IDMgLy8gYWNmZwppdHhuX2ZpZWxkIFR5cGVFbnVtCmludGNfMCAvLyAwCml0eG5fZmllbGQgQ29uZmlnQXNzZXREZWZhdWx0RnJvemVuCmZyYW1lX2RpZyAtMgpleHRyYWN0IDIgMAppdHhuX2ZpZWxkIENvbmZpZ0Fzc2V0VVJMCmZyYW1lX2RpZyAtMQpleHRyYWN0IDIgMAppdHhuX2ZpZWxkIENvbmZpZ0Fzc2V0TWV0YWRhdGFIYXNoCmZyYW1lX2RpZyAtMwpleHRyYWN0IDIgMAppdHhuX2ZpZWxkIENvbmZpZ0Fzc2V0TmFtZQpwdXNoYnl0ZXMgMHg0MTQ2NGU0NjU0IC8vICJBRk5GVCIKaXR4bl9maWVsZCBDb25maWdBc3NldFVuaXROYW1lCmludGNfMSAvLyAxCml0eG5fZmllbGQgQ29uZmlnQXNzZXRUb3RhbAppbnRjXzAgLy8gMAppdHhuX2ZpZWxkIENvbmZpZ0Fzc2V0RGVjaW1hbHMKaXR4bl9zdWJtaXQKaXR4biBDcmVhdGVkQXNzZXRJRApmcmFtZV9idXJ5IDAKcmV0c3ViCgovLyB0cmFuc2Zlcl9uZnQKdHJhbnNmZXJuZnRfNzoKcHJvdG8gMCAxCmJ5dGVjXzEgLy8gIiIKaXR4bl9iZWdpbgpwdXNoaW50IDQgLy8gYXhmZXIKaXR4bl9maWVsZCBUeXBlRW51bQp0eG5hIEFzc2V0cyAwCml0eG5fZmllbGQgWGZlckFzc2V0CnR4bmEgQWNjb3VudHMgMAppdHhuX2ZpZWxkIEFzc2V0UmVjZWl2ZXIKaW50Y18xIC8vIDEKaXR4bl9maWVsZCBBc3NldEFtb3VudAppdHhuX3N1Ym1pdApwdXNoYnl0ZXMgMHgwMDBjNTQ3MjYxNmU3MzY2NjU3MjcyNjU2NDIxIC8vIDB4MDAwYzU0NzI2MTZlNzM2NjY1NzI3MjY1NjQyMQpmcmFtZV9idXJ5IDAKcmV0c3ViCgovLyBhdG9taWNfY2hlY2sKYXRvbWljY2hlY2tfODoKcHJvdG8gNCAxCmJ5dGVjXzEgLy8gIiIKZnJhbWVfZGlnIC00CmV4dHJhY3QgMiAwCnB1c2hieXRlcyAweDc0NjU3ODc0MzEgLy8gInRleHQxIgo9PQphc3NlcnQKZnJhbWVfZGlnIC0xCnB1c2hpbnQgMTAwIC8vIDEwMAo9PQphc3NlcnQKZnJhbWVfZGlnIC0zCmd0eG5zIFR5cGVFbnVtCmludGNfMSAvLyBwYXkKPT0KYXNzZXJ0CmZyYW1lX2RpZyAtMgpndHhucyBUeXBlRW51bQppbnRjXzEgLy8gcGF5Cj09CmFzc2VydApwdXNoYnl0ZXMgMHgwMDA1NTA2MTczNzMyMSAvLyAweDAwMDU1MDYxNzM3MzIxCmZyYW1lX2J1cnkgMApyZXRzdWI=",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDgKcHVzaGludCAwIC8vIDAKcmV0dXJu"
    },
    "state": {
        "global": {
            "num_byte_slices": 1,
            "num_uints": 1
        },
        "local": {
            "num_byte_slices": 1,
            "num_uints": 1
        }
    },
    "schema": {
        "global": {
            "declared": {
                "global_integer": {
                    "type": "uint64",
                    "key": "GlobalInteger",
                    "descr": "global state integer"
                },
                "global_text": {
                    "type": "bytes",
                    "key": "GlobalText",
                    "descr": "global state text"
                }
            },
            "reserved": {}
        },
        "local": {
            "declared": {
                "local_integer": {
                    "type": "uint64",
                    "key": "LocalInteger",
                    "descr": "local state integer"
                },
                "local_text": {
                    "type": "bytes",
                    "key": "LocalText",
                    "descr": "local state text"
                }
            },
            "reserved": {}
        }
    },
    "contract": {
        "name": "DemoApp",
        "methods": [
            {
                "name": "update_global",
                "args": [
                    {
                        "type": "string",
                        "name": "gt"
                    },
                    {
                        "type": "uint64",
                        "name": "gi"
                    }
                ],
                "returns": {
                    "type": "string"
                }
            },
            {
                "name": "update_local",
                "args": [
                    {
                        "type": "string",
                        "name": "lt"
                    },
                    {
                        "type": "uint64",
                        "name": "li"
                    }
                ],
                "returns": {
                    "type": "string"
                }
            },
            {
                "name": "create_nft",
                "args": [
                    {
                        "type": "string",
                        "name": "assetName"
                    },
                    {
                        "type": "string",
                        "name": "assetURL"
                    },
                    {
                        "type": "string",
                        "name": "metadataHash"
                    }
                ],
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "transfer_nft",
                "args": [],
                "returns": {
                    "type": "string"
                }
            },
            {
                "name": "atomic_check",
                "args": [
                    {
                        "type": "string",
                        "name": "text1"
                    },
                    {
                        "type": "txn",
                        "name": "pay1"
                    },
                    {
                        "type": "txn",
                        "name": "pay2"
                    },
                    {
                        "type": "uint64",
                        "name": "num1"
                    }
                ],
                "returns": {
                    "type": "string"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {
        "close_out": "CALL",
        "delete_application": "CALL",
        "no_op": "CREATE",
        "opt_in": "CALL"
    }
}